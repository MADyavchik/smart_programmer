# firmware_downloader.py
from packaging import version
import os
import requests

SERVER_URL = "https://tn.zitsky.com/flasher/eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3NjA1MzY1ODQsIm5hbWUiOiJQYXZlbFBvcnRhdGl2ZSJ9.xaJabSB73QsJBhjHb4jQT2VHJXtQ8NXz3EQ3I0M2l7I/firmwares"
DOWNLOAD_DIR = "firmwares_downloaded"
os.makedirs(DOWNLOAD_DIR, exist_ok=True)

def download_latest_firmware():
    """–°–∫–∞—á–∏–≤–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é –ø—Ä–æ—à–∏–≤–∫–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞"""
    try:
        response = requests.get(SERVER_URL)
        response.raise_for_status()
        data = response.json()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–∞ 'firmwares'
        firmwares = data.get("firmwares", [])
        if not firmwares:
            print("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ—à–∏–≤–æ–∫")
            return None

        # ‚úÖ –õ–æ–≥–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ—à–∏–≤–∫–∏
        print("\nüì¶ –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ—à–∏–≤–∫–∏:")
        for fw in firmwares:
            print(f"  ‚Ä¢ –í–µ—Ä—Å–∏—è: {fw['version']}, –ì—Ä—É–ø–ø–∞: {fw['group']}, –î–∞—Ç–∞: {fw['created_at']}")

        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤–µ—Ä—Å–∏–∏ (–µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∏, –º–æ–∂–Ω–æ –ø–æ created_at)
        firmwares.sort(key=lambda x: version.parse(x["version"]))
        latest = firmwares[-1]

        zip_url = latest["zip"]
        latest_version = latest["version"]

        file_name = zip_url.split("/")[-1] + ".zip"
        local_path = os.path.join(DOWNLOAD_DIR, file_name)

        with requests.get(zip_url, stream=True) as r:
            r.raise_for_status()
            with open(local_path, "wb") as f:
                for chunk in r.iter_content(chunk_size=8192):
                    f.write(chunk)

        print(f"‚úÖ –ü—Ä–æ—à–∏–≤–∫–∞ {latest_version} —Å–∫–∞—á–∞–Ω–∞: {local_path}")
        return local_path

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None
